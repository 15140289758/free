框架的运行流程
1、入口文件：所有的请求进入到入口文件，然后进行分发
a、定义常量，包括框架所在的目录，框架的核心文件所处的目录（在框架所在目录的下级菜单），项目文件，控制器、模型、视图等
b、是否开启debug模式：php自带的函数ini_set('display_error', 'on/off')
c、加载函数库：首先要创建对应的目录接口core，按照常量的定义目录创建，在函数库下创建common（公共的函数库），这个函数库可以存放一些自己常用的函数，包括ajax返回值的处理，变量打印输出等等
d、加载框架的核心文件，在core目录下创建核心文件free.php，这个文件是个类
    类文件的创建：首先要写命名空间，然后创建class，之后创建启动框架的函数，这个函数使用会比较多，所以函数是静态的
e、自动加载的功能：在核心文件中创建自动加载的方法load，使用到spl_autoload_register(类名::静态方法名)--当new的类不存在的时候，会自动触发这个方法使用到spl_autoload_register，通过这个
    方法将不存在的类引入
f、在核心文件中创建静态的变量，存放已经加载过的类，避免重复加载，接下来判断文件是否存在，不存在返回false，存在就引入文件，将类存放到已经加过的类中


2、定义一下常量：例如框架所在的目录、函数库、第三方类库等
3、引入函数库
4、自动加载类，自动的加载一些文件
5、启动框架
6、路由类：解析url
7、通过解析的url，找到需要加载的控制器以及需要运行的方法
8、通过逻辑计算，返回预期的结果